<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ohmija.repository.Fes_boardDAO">
	<!-- 동영 -->
	<insert id="mainWrite" parameterType="fes_board">
		insert into board
				(member, start_date, end_date,
				 title, content, region,
				 file_name, file_path, festival_category)
			values
				(#{member}, #{start_date}, #{end_date},
				 #{title}, #{content}, #{region}, #{file_name},
				 #{file_path}, #{festival_category})
	</insert>
	
	<select id="select_month" resultType="fes_board" parameterType="string">
		select * from board
			where to_char(start_date, 'yyyy-MM') = #{month}
				or to_char(end_date, 'yyyy-MM') = #{month}
            order by idx
	</select>
	
	<select id="select_coming" resultType="fes_board">
		select * from board
			where end_date &gt;= sysdate
			order by start_date, end_date
			fetch first 10 rows only
	</select>
	
	<select id="select_top10" resultType="fes_board">
		select rownum as rank, 
				idx, start_date, end_date, title, favorites, grade,
				region, file_name, file_path, festival_category
			from board
				where end_date &gt;= sysdate
				order by favorites desc
				 fetch first 10 rows only
	</select>
	
	<!-- 임시 저장 -->
	
	<!-- upsert를 이용하여 임시저장글 저장 (member, title이 동시에 중복될 경우 update / 아니면 insert) -->
	<update id="temp_board_save" parameterType="fes_board">
		merge into temp_board t
		using (
			select
				#{member} as member,
				#{title} as title,
				#{start_date} as start_date,
				#{end_date} as end_date,
				#{content} as content,
				#{region} as region,
				#{festival_category} as festival_category
			from dual
		) s
		on (t.member = s.member and t.title = s.title)
		when matched then
			update set
				t.start_date = s.start_date,
				t.end_date = s.end_date,
				t.content = s.content,
				t.region = s.region,
				t.festival_category = s.festival_category
		when not matched then
			insert (member, title, start_date, end_date,
					content, region, festival_category)
			values (s.member, s.title, s.start_date, s.end_date,
					s.content, s.region, s.festival_category)
	</update>
	
	<select id="select_temp_board" resultType="fes_board" parameterType="int">
		select * from temp_board
			where member = #{member}
				order by write_date desc
	</select>
	
	<select id="load_temp_board" resultType="fes_board" parameterType="int">
		select * from temp_board
			where idx = #{idx}
	</select>
	
	<delete id="temp_delete" parameterType="int">
		delete from temp_board where idx = #{idx}
	</delete>
	
	
	
	<!-- 승록 -->
	<!-- 페이징을 위한 모든 게시물 개수 불러오기 -->
	<select id="select_total_page" resultType="int">
		select count(*) from board
	</select>
	
	<!-- 기본 페이징 -->
	<select id="fes_board_selectAll" parameterType="fes_board_page" resultType="fes_board">
		select * from board
			order by idx desc
			offset #{offset} rows
			fetch next #{per_page} rows only
	</select>
	
	<!-- 해당 게시물 띄우기 -->
	<select id="select_main_board" parameterType="int" resultType="fes_board">
		select * from board
			where idx = #{idx}
	</select>
	
	<!-- 검색 게시물 개수 -->
	<select id="select_search_total" parameterType="fes_search" resultType="int">
		select count(*) from board
			where
				region like '%' || #{region} || '%'
				and region like '%' || #{region_section} || '%'
				and festival_category like '%' || #{festival_category} || '%'
				<if test="start_date != null and start_date != ''">
					and start_date &gt;= #{start_date}
				</if>
				<if test="end_date != null and end_date != ''">
				    and end_date &lt;= #{end_date}
				</if>
				and member = 
					(select idx from member where nickname like '%' || #{fes_keyword} || '%')
					order by idx desc
	</select>
	
	<select id="search_complex_total" parameterType="fes_search" resultType="int">
		select count(*) from board
			where
				region like '%' || #{region} || '%'
				and region like '%' || #{region_section} || '%'
				and festival_category like '%' || #{festival_category} || '%'
				<if test="start_date != null and start_date != ''">
					and start_date &gt;= #{start_date}
				</if>
				<if test="end_date != null and end_date != ''">
				    and end_date &lt;= #{end_date}
				</if>
				and (title like '%' || #{fes_keyword} || '%'
				or url like '%' || #{fes_keyword} || '%'
				or place like '%' || #{fes_keyword} || '%'
				or way_to_come like '%' || #{fes_keyword} || '%'
				or fee like '%' || #{fes_keyword} || '%'
				or age_limit like '%' || #{fes_keyword} || '%'
				or inquire like '%' || #{fes_keyword} || '%'
				or host_org like '%' || #{fes_keyword} || '%'
				or content like '%' || #{fes_keyword} || '%')
			order by idx desc
	</select>

	<!-- 검색 결과 -->	
	<select id="select_search_All" parameterType="fes_board_page" resultType="fes_board">
		select * from board
			where
				region like '%' || #{region} || '%'
				and region like '%' || #{region_section} || '%'
				and festival_category like '%' || #{festival_category} || '%'
				<if test="start_date != null and start_date != ''">
					and start_date &gt;= #{start_date}
				</if>
				<if test="end_date != null and end_date != ''">
				    and end_date &lt;= #{end_date}
				</if>
				and member = 
					(select idx from member where nickname like '%' || #{fes_keyword} || '%')
			order by idx desc
			offset #{offset} rows
			fetch next #{per_page} rows only
	</select>
	
		<select id="select_search_complex" parameterType="fes_board_page" resultType="fes_board">
		select * from board
			where
				region like '%' || #{region} || '%'
				and region like '%' || #{region_section} || '%'
				and festival_category like '%' || #{festival_category} || '%'
				<if test="start_date != null and start_date != ''">
					and start_date &gt;= #{start_date}
				</if>
				<if test="end_date != null and end_date != ''">
				    and end_date &lt;= #{end_date}
				</if>
				and (title like '%' || #{fes_keyword} || '%'
				or url like '%' || #{fes_keyword} || '%'
				or place like '%' || #{fes_keyword} || '%'
				or way_to_come like '%' || #{fes_keyword} || '%'
				or fee like '%' || #{fes_keyword} || '%'
				or age_limit like '%' || #{fes_keyword} || '%'
				or inquire like '%' || #{fes_keyword} || '%'
				or host_org like '%' || #{fes_keyword} || '%'
				or content like '%' || #{fes_keyword} || '%')
			order by idx desc
			offset #{offset} rows
			fetch next #{per_page} rows only
	</select>
	
	
</mapper>